@using System.Linq
@using MrCMS.Entities.Documents.Layout
@using MrCMS.Helpers
@using MrCMS.Web.Apps.Admin.Models
@model MrCMS.Web.Apps.Admin.Models.UpdateLayoutModel
@{
    ViewBag.Title = Model.Name;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var layoutAreas = ViewData["layout-areas"] as List<LayoutArea>;
}
<div class="content-item">
    <form asp-controller="Layout" asp-action="Edit" method="post" id="edit-document" novalidate="">

        <fieldset>
            <legend>
                @Model.Name
                <span class="btn-group pull-right">
                    @if (Html.CanDeleteDocument(Model.Id))
                    {
                        <a href="@Url.Action("Delete", "Layout", new {id = Model.Id})" class="btn btn-danger" data-toggle="fb-modal">@Html.Resource("Delete")</a>
                    }

                    @Html.ActionLink(Html.Resource("Move"), "Set", "Layout", new {id = Model.Id}, new {data_toggle = "fb-modal", @class = "btn btn-secondary"})
                    <button class="btn btn-primary" id="save-edit">@Html.Resource("Save")</button>
                </span>
            </legend>

            @if (TempData["saved"] != null)
            {
                <div class="alert alert-success">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    @TempData["saved"]
                </div>
            }

            @Html.HiddenFor(x => x.Id)
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Name)
                        @Html.TextBoxFor(x => x.Name, new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.Name, "", new {@class = "error"})
                    </div>
                    @Html.EditorFor(x => x.UrlSegment)

                    @Html.EditorFor(x => x.Hidden)
                </div>
            </div>
            <h4 class="light">@Html.Resource("Admin Layout Areas Title", "Areas")</h4>
            @{
                if (layoutAreas.Any())
                {
                    <table class="table table-condensed table-striped">
                        <tbody>
                        @foreach (LayoutArea area in layoutAreas)
                        {
                            <tr>
                                <td>
                                    @area.AreaName
                                    (@area.GetWidgets().Count())
                                </td>
                                <td>
                                    <div class="btn-group">
                                        @Html.ActionLink("Edit", "Edit", "LayoutArea", new {id = area.Id}, new {@class = "btn btn-secondary btn-sm"})
                                        <a href="@Url.Action("Delete", "LayoutArea", new {id = area.Id})" class="btn btn-sm btn-danger" data-toggle="fb-modal">@Html.Resource("Delete")</a>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                }
                else
                {
                    @Html.Resource("Admin Layout Add Info", "Click Add layout area to add the first area to this layout")
                }
            }

            <a href="@Url.Action("Add", "LayoutArea", new {id = Model.Id})" class="btn btn-sm btn-secondary" data-toggle="fb-modal">@Html.Resource("Admin Layout Add Area", "Add layout area")</a>

        </fieldset>
    </form>
</div>